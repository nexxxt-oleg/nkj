document.addEventListener("DOMContentLoaded", () => {
    const widthScreen = window.innerWidth || document.documentElement.clientWidth ||
        document.body.clientWidth;


    function getScrollMenu() {
        let el = document.body;
        if (pageYOffset > 300) {
            el.classList.add('fix_menu');
        } else {
            el.classList.remove("fix_menu");
        }
    }

    getScrollMenu();
    window.addEventListener('scroll', function () {
        getScrollMenu();
    });

    if (document.getElementById('sliderNews')) {
        const sliderBrands = new Swiper('#sliderNews', {
            spaceBetween: 24,
            slidesPerView: 3,
            slidesPerGroup: 1,

            breakpoints: {
                300: {
                    slidesPerView: 'auto',
                    spaceBetween: 16
                },
                768: {
                    slidesPerView: 'auto',
                    spaceBetween: 24
                },
                991: {
                    slidesPerView: 3,
                    spaceBetween: 24
                },
                1200: {
                    slidesPerView: 3,
                    spaceBetween: 24
                },
            },

        });
    }

    if (document.getElementById('sliderReg')) {
        new Swiper('#sliderReg', {
            effect: "fade",
            crossFade: true,
            speed: 1000,
            autoplay: {
                delay: 3000,
                disableOnInteraction: false,
            },
        });
    }


    const jsPass = document.querySelectorAll('.js-pass');

    jsPass.forEach(el => {
        el.addEventListener('click', (event) => {
            if (document.getElementById(el.dataset.target)) {
                let inputPass = document.getElementById(el.dataset.target);
                if (inputPass.type === 'password') {
                    inputPass.type = 'text';
                    el.classList.add('active');
                } else {
                    inputPass.type = 'password';
                    el.classList.remove('active');
                }
            }
        });
    });

    if(document.getElementById('formReg')) {
        let form = document.getElementById('formReg');
        const submitBtn = document.getElementById('submitBtn');

        const validator = new JustValidate('#formReg', {
            errorFieldCssClass: 'is-invalid',
            successFieldCssClass: 'is-valid',
            validateBeforeSubmitting: true,
        });

        if(document.getElementById('email')) {
            validator.addField('#email', [
                {
                    rule: 'required',
                    errorMessage: 'Введите email',
                },
                {
                    rule: 'email',
                    errorMessage: 'Введите корректный email',
                },
            ]);
        }

        if(document.getElementById('pass')) {
            validator.addField('#pass', [
                {
                    rule: 'required',
                    errorMessage: 'Введите пароль',
                }
            ]);
        }

        if(document.getElementById('pass2')) {
            validator.addField('#pass2', [
                {
                    rule: 'required',
                    errorMessage: 'Введите пароль',
                }
            ]);
        }

        if(document.getElementById('capcha')) {
            validator.addField('#capcha', [
                {
                    rule: 'required',
                    errorMessage: 'Введите капчу',
                }
            ]);
        }

        // Проверка состояния формы
        const checkFormValidity = () => {
            //console.log('1111');
            const isValid = form.checkValidity();
            submitBtn.disabled = !isValid;
        };

        // Обновление состояния кнопки при изменении в полях формы
        const fields = form.querySelectorAll('input, textarea');
        fields.forEach((field) => {
            field.addEventListener('input', checkFormValidity);
        });

        // Начальная проверка состояния кнопки
        checkFormValidity();
    }

    /*if(location.hash){
        const triggerEl = document.querySelector(location.hash)
        bootstrap.Tab.getOrCreateInstance(triggerEl).show()
    }

    const selectableTabList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tab"]'))
    selectableTabList.forEach((selectableTab) => {
        selectableTab.addEventListener('shown.bs.tab', event => {
            console.log('Previous URL: ' + location.href);
            history.replaceState(null, null, '#' + event.target.id);
        })
    });*/

    if (document.getElementById('revSlider')) {
        const sliderBrands = new Swiper('#revSlider', {
            spaceBetween: 24,
            slidesPerView: 3,
            slidesPerGroup: 1,
            navigation: {
                nextEl: '#revNext',
                prevEl: '#revPrev',
            },

            pagination: {
                el: '#historySliderPagination',
                clickable: true,
            },

            breakpoints: {
                300: {
                    slidesPerView: 'auto',
                    spaceBetween: 16
                },
                768: {
                    slidesPerView: 'auto',
                    spaceBetween: 24
                },
                991: {
                    slidesPerView: 3,
                    spaceBetween: 24
                },
                1200: {
                    slidesPerView: 3,
                    spaceBetween: 24
                },
            },

        });
    }
    if (document.getElementById('historySlider')) {
        const sliderBrands = new Swiper('#historySlider', {
            spaceBetween: 24,
            slidesPerView: 3,
            slidesPerGroup: 1,
            navigation: {
                nextEl: '#historySliderNext',
                prevEl: '#historySliderPrev',
            },

            breakpoints: {
                300: {
                    slidesPerView: 'auto',
                    spaceBetween: 16
                },
                768: {
                    slidesPerView: 'auto',
                    spaceBetween: 24
                },
                991: {
                    slidesPerView: 3,
                    spaceBetween: 24
                },
                1200: {
                    slidesPerView: 3,
                    spaceBetween: 24
                },
            },

        });
    }
});
